version: '3'
services:
  nats-server:
    container_name: nats-server
    image: nats:latest
    ports:
      - "8222:8222"
  client-gateway:
    build:
      context: ./client-gateway
      dockerfile: dockerfile.prod
    image: client-gateway-prod  
    ports:
      - "${CLIENT_GATEWAY_PORT}:${CLIENT_GATEWAY_PORT}"
    # volumes:
    #   - ./client-gateway/src:/usr/src/app/src
    # command: npm run start:dev
    environment:
      - PORT=${CLIENT_GATEWAY_PORT}
      - NATS_SERVERS=nats://nats-server:4222

  auth-ms:
    container_name: auth-ms
    build:
      context: ./auth-ms
      dockerfile: dockerfile.prod
    image: auth-ms-prod     
    environment:
      # - PORT=${AUTH_MS_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      - AUTH_DATABASE_URL=${AUTH_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}

  product-ms:
    container_name: product-ms
    build:
      context: ./product-ms
      dockerfile: dockerfile.prod
    # depends_on:
    #   - nats-server
    image: product-ms-prod     
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db 

  payment-ms:
    container_name: payment-ms
    build:
      context: ./payments-ms
      dockerfile: dockerfile.prod
    image: payment-ms-prod     
    ports:
    - "${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}" 
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET} 

  orders-ms:
    container_name: orders-ms
    build:
      context: ./orders-ms
      dockerfile: dockerfile.prod
      args:
        - ORDERS_DATABASE_URL=${ORDERS_DATABASE_URL}
    image: orders-ms-prod       
    environment:
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=${ORDERS_DATABASE_URL}


   # orders-ms:
  #   container_name: orders-ms
  #   build: ./orders-ms
  #   restart: always
  #   # ports:
  #   #   - "3002:3002"
  #   depends_on:
  #     - orders-db     
  #   volumes:
  #     - ./orders-ms/src:/usr/src/app/src
  #   command: npm run start:dev
  #   environment:
  #     - PORT=3002
  #     - NATS_SERVERS=nats://nats-server:4222
  #     - DATABASE_URL=postgresql://postgres:postgres@orders-db:5432/ordersdb?schema=public   

  # orders-db:
  #   container_name: orders-db
  #   image: postgres:16.2
  #   restart: always
  #   volumes:
  #     - ./orders-ms/postgresql:/var/lib/postgresql/data       
  #   ports:
  #     - "5432:5432"
  #   # command: -p 5433      
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: ordersdb
      

 
  # payment-ms:
  #   container_name: payments-ms
  #   build: ./payments-ms
  #   restart: always
  #   ports:
  #   - "${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}"     
  #   volumes:
  #   - ./payments-ms/src:/usr/src/app/src
  #   command: npm run start:dev
  #   environment:
  #     - PORT=${PAYMENTS_MS_PORT}
  #     - NATS_SERVERS=nats://nats-server:4222
  #     - STRIPE_SECRET=${STRIPE_SECRET}
  #     - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
  #     - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
  #     - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}

  # orders-ms:
  #   container_name: orders-ms
  #   build: ./orders-ms
  #   restart: always
  #   # ports:
  #   #   - "3002:3002"
  #   depends_on:
  #     - orders-db     
  #   volumes:
  #     - ./orders-ms/src:/usr/src/app/src
  #   command: npm run start:dev
  #   environment:
  #     - PORT=3002
  #     - NATS_SERVERS=nats://nats-server:4222
  #     - DATABASE_URL=postgresql://postgres:postgres@orders-db:5432/ordersdb?schema=public
  # orders-db:
  #   container_name: orders-db
  #   image: postgres:16.2
  #   restart: always
  #   volumes:
  #     - ./orders-ms/postgresql:/var/lib/postgresql/data       
  #   ports:
  #     - "5432:5432"
  #   # command: -p 5433      
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: ordersdb



  # user-db:
  #   container_name: user-db
  #   image: mongo
  #   restart: always
  #   volumes:
  #     - ./auth-ms/mongo_data:/data/db       
  #   ports:
  #     - "27017:27017"
  #   # command: -p 5433      
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: admin
      

      

    
   